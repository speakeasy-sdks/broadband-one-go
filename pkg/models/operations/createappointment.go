// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateAppointmentSecurity struct {
	OAuth2 string `security:"scheme,type=oauth2,name=Authorization"`
}

func (o *CreateAppointmentSecurity) GetOAuth2() string {
	if o == nil {
		return ""
	}
	return o.OAuth2
}

type CreateAppointmentRequest struct {
	// A unique reference used to track the transaction end to end. The recommended format is UUID (a 36-character alphanumeric string "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX").
	APIGWTrackingHeader    string                         `header:"style=simple,explode=false,name=APIGW-Tracking-Header"`
	PostAppointmentRequest *shared.PostAppointmentRequest `request:"mediaType=application/json"`
	// Indicates the product family to which product belongs to.
	//
	ProductFamily shared.ProductFamily `header:"style=simple,explode=false,name=productFamily"`
}

func (o *CreateAppointmentRequest) GetAPIGWTrackingHeader() string {
	if o == nil {
		return ""
	}
	return o.APIGWTrackingHeader
}

func (o *CreateAppointmentRequest) GetPostAppointmentRequest() *shared.PostAppointmentRequest {
	if o == nil {
		return nil
	}
	return o.PostAppointmentRequest
}

func (o *CreateAppointmentRequest) GetProductFamily() shared.ProductFamily {
	if o == nil {
		return shared.ProductFamily("")
	}
	return o.ProductFamily
}

type CreateAppointmentResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Bad Request
	//
	// | Code | Message  | Description |
	// | ---- | -------   | ----------- |
	// | 21 | Missing body | This resource requires a body to be provided in the request.|
	// | 25 | Missing header: \<parameter\>| The indicated parameter is missing from the request header. |
	// | 26 | Invalid header value: \<parameter\> | The indicated parameter in the request header is not recognized. |
	// | SiteVisitReasonNotSuported | - |  The error originated from target, when passed <i>siteVisitReason</i> not allowed for the specified product. |
	// | SimNotSupported | - | The error originated from target, when invalid <i>productCode & simProvide</i> flag combination. |
	// | MissingLocationIdentifier | - | The error originated from target, when neither <i>DirectoryNumber</i> nor address supplied.|
	// | TooManyLocationIdentifiers | - |  The error originated from target, when both <i>DirectoryNumber</i> and address supplied. |
	// | TimeSlotNotSupported | - | The error originated from target, when data is valid but we don't support (e.g. ALLDAY) slot for G.Fast.|
	// | AccessLineIdNotRecognised | - | The error originated from target, when  data could not be returned as the access line ID was not recognised.	|
	// | NewExchangeLineNotSupported | - |  The error originated from target, when <i>NewExchangeLine</i> included in appointment request for 'non-SOGEA/SOGFASTline'. |
	// | NoDirectoryNumberForAccessLineId	 | - | The error originated from target, when no installation directory number exists for the given access line ID.|
	// | InvalidInputCombination | - | The error originated from target, when the location identifier, sim flag and product combination is not supported.|
	// | TimeSlotNotAvailable | - |  The error originated from target, when MAC2 2131 the appointment slot you are trying to reserve is no longer available. |
	// | ExchangeLineInactive | - | The error originated from target, when MAC2 2119 appointment cannot be provided for inactive line.	|
	// | MissingCredentials | - | Error from downstream. |
	// | MissingRequestBody |  - | Error from downstream. |
	// | MissingData | - | Error from downstream.|
	// | InvalidData | - | Error from downstream. |
	CreateAppointment400ApplicationJSONAnyOf interface{}
	// Forbidden
	//
	// | Code | Message   | Description |
	// | ---- | -------   | ----------- |
	// | 50 | Access denied | The client application is not authorised to call this resource. |
	// | ExchangeLineAssignedToAnotherCP | - | Error from downstream. |
	CreateAppointment403ApplicationJSONAnyOf interface{}
	// Unsupported Media Type
	//
	// | Code | Message   | Description |
	// | ---- | -------   | ----------- |
	// | 68 | Unsupported media type | The request body does not match a supported content-type. |
	// | UnsupportedMediaType | - | Error from downstream. |
	CreateAppointment415ApplicationJSONAnyOf interface{}
	// Unauthorized
	//
	// | Code | Message | Description |
	// | ---- | ------- | ----------- |
	// | 40 | Missing credentials | The <i>Authorization</i> parameter is missing. |
	// | 41 | Invalid credentials | The <i>Authorization</i> parameter is not valid. |
	// | 42 | Expired credentials | Renew the access token using the OAuth API and try again. |
	//
	FailureResponse *shared.FailureResponse
	// created
	PostAppointmentResponse *shared.PostAppointmentResponse
}

func (o *CreateAppointmentResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *CreateAppointmentResponse) GetHeaders() map[string][]string {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *CreateAppointmentResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *CreateAppointmentResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *CreateAppointmentResponse) GetCreateAppointment400ApplicationJSONAnyOf() interface{} {
	if o == nil {
		return nil
	}
	return o.CreateAppointment400ApplicationJSONAnyOf
}

func (o *CreateAppointmentResponse) GetCreateAppointment403ApplicationJSONAnyOf() interface{} {
	if o == nil {
		return nil
	}
	return o.CreateAppointment403ApplicationJSONAnyOf
}

func (o *CreateAppointmentResponse) GetCreateAppointment415ApplicationJSONAnyOf() interface{} {
	if o == nil {
		return nil
	}
	return o.CreateAppointment415ApplicationJSONAnyOf
}

func (o *CreateAppointmentResponse) GetFailureResponse() *shared.FailureResponse {
	if o == nil {
		return nil
	}
	return o.FailureResponse
}

func (o *CreateAppointmentResponse) GetPostAppointmentResponse() *shared.PostAppointmentResponse {
	if o == nil {
		return nil
	}
	return o.PostAppointmentResponse
}
